<templateSet group="api_demo">
  <template name="guoya_demo_post_json" value="def test_post_json(pub_data):&#10;    method = &quot;POST&quot;  #请求方法，全部大写&#10;    feature = &quot;用户模块&quot;  # allure报告中一级分类&#10;    story = '用户登录'  # allure报告中二级分类&#10;    title = &quot;全字段正常流_1&quot;  # allure报告中用例名字&#10;    uri = &quot;/login&quot;  # 接口地址&#10;    # post请求json数据，注意数据格式为字典或者为json串 为空写None&#10;    json_data = '''&#10;    {&#10;  &quot;pwd&quot;: &quot;xuepl123&quot;,&#10;  &quot;userName&quot;: &quot;xuepl123&quot;&#10;}&#10;    '''&#10;    status_code = 200  # 响应状态码&#10;    expect = &quot;2000&quot;  # 预期结果&#10;    # --------------------分界线，下边的不要修改-----------------------------------------&#10;    # method,pub_data和url为必传字段&#10;    request_tool.request(method=method,url=uri,pub_data=pub_data,json_data=json_data,status_code=status_code,expect=expect,feature=feature,story=story,title=title)&#10;" description="post请求json数据" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="guoya_demo_post_data" value="def test_post_data(pub_data):&#10;    method = &quot;POST&quot;  #请求方法，全部大写&#10;    feature = &quot;用户模块&quot;  # allure报告中一级分类&#10;    story = '锁定用户'  # allure报告中二级分类&#10;    title = &quot;锁定用户_全字段正常流_1&quot;  # allure报告中用例名字&#10;    uri = &quot;/user/lock&quot;  # 接口地址&#10;    # post请求json数据，注意数据格式为字典或者为json串 为空写None&#10;    data = {&quot;userName&quot;:'xuepl122'}&#10;    headers={&quot;token&quot;:&quot;eyJ0aW1lT3V0IjoxNTcxMzgyNTQ3MTI1LCJ1c2VySWQiOjQ4LCJ1c2VyTmFtZSI6Inh1ZXBsMTIzIn0=&quot;}&#10;    status_code = 200  # 响应状态码&#10;    expect = &quot;2000&quot;  # 预期结果&#10;    # --------------------分界线，下边的不要修改-----------------------------------------&#10;    # method,pub_data和url为必传字段&#10;    request_tool.request(method=method,url=uri,pub_data=pub_data,data=data,status_code=status_code,expect=expect,feature=feature,story=story,title=title,headers=headers)&#10;" description="post请求键值对数据" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="guoya_demo_get_params" value="def test_get_params(pub_data):&#10;    method = &quot;GET&quot;  #请求方法，全部大写&#10;    feature = &quot;用户模块&quot;  # allure报告中一级分类&#10;    story = '查询单个用户'  # allure报告中二级分类&#10;    title = &quot;查询单个用户_全字段正常流_1&quot;  # allure报告中用例名字&#10;    uri = &quot;/cst/getCustomer&quot;  # 接口地址&#10;    # post请求json数据，注意数据格式为字典或者为json串 为空写None&#10;    params = {&quot;phone&quot;:'18103909786'}&#10;    headers={&quot;token&quot;:&quot;eyJ0aW1lT3V0IjoxNTcxMzgyNTQ3MTI1LCJ1c2VySWQiOjQ4LCJ1c2VyTmFtZSI6Inh1ZXBsMTIzIn0=&quot;}&#10;    status_code = 200  # 响应状态码&#10;    expect = &quot;2000&quot;  # 预期结果&#10;    # --------------------分界线，下边的不要修改-----------------------------------------&#10;    # method,pub_data和url为必传字段&#10;    request_tool.request(method=method,url=uri,pub_data=pub_data,params=params,status_code=status_code,expect=expect,feature=feature,story=story,title=title,headers=headers)&#10;" description="get请求键值对数据" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="guoya_demo_get_file" value="def test_get_file(pub_data):&#10;    file_name = &quot;e:\\sku.xlsx&quot; # 下载文件地址&#10;    method = &quot;GET&quot;  #请求方法，全部大写&#10;    feature = &quot;库存模块&quot;  # allure报告中一级分类&#10;    story = '下载库存信息'  # allure报告中二级分类&#10;    title = &quot;下载库存信息_全字段正常流_1&quot;  # allure报告中用例名字&#10;    uri = &quot;/product/downProdRepertory&quot;  # 接口地址&#10;    # post请求json数据，注意数据格式为字典或者为json串 为空写None&#10;    params = {&quot;pridCode&quot;:'4l300'}&#10;    headers={&quot;token&quot;:&quot;eyJ0aW1lT3V0IjoxNTcxMzgyNTQ3MTI1LCJ1c2VySWQiOjQ4LCJ1c2VyTmFtZSI6Inh1ZXBsMTIzIn0=&quot;}&#10;    status_code = 200  # 响应状态码&#10;    expect = &quot;9999&quot;  # 预期结果&#10;    # --------------------分界线，下边的不要修改-----------------------------------------&#10;    # method,pub_data和url为必传字段&#10;    r = request_tool.request(method=method,url=uri,pub_data=pub_data,params=params,status_code=status_code,expect=expect,feature=feature,story=story,title=title,headers=headers)&#10;    with open(file_name,&quot;rw&quot;) as f :&#10;        f.write(r.content)" description="get请求下载文件" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="guoya_demo_post_file" value="def test_post_file(pub_data):&#10;    file_name = &quot;e:\\sku.xls&quot; # 下载文件地址&#10;    method = &quot;POST&quot;  #请求方法，全部大写&#10;    feature = &quot;库存模块&quot;  # allure报告中一级分类&#10;    story = '盘点库存'  # allure报告中二级分类&#10;    title = &quot;盘点库存&quot;  # allure报告中用例名字&#10;    uri = &quot;/product/uploaProdRepertory&quot;  # 接口地址&#10;    # post请求json数据，注意数据格式为字典或者为json串 为空写None&#10;    files = {&quot;file&quot;:open(file_name,'rb')}&#10;    headers={&quot;token&quot;:&quot;eyJ0aW1lT3V0IjoxNTcxMzgyNTQ3MTI1LCJ1c2VySWQiOjQ4LCJ1c2VyTmFtZSI6Inh1ZXBsMTIzIn0=&quot;}&#10;    status_code = 200  # 响应状态码&#10;    expect = &quot;2000&quot;  # 预期结果&#10;    # --------------------分界线，下边的不要修改-----------------------------------------&#10;    # method,pub_data和url为必传字段&#10;    request_tool.request(method=method,url=uri,pub_data=pub_data,files=files,status_code=status_code,expect=expect,feature=feature,story=story,title=title,headers=headers)&#10;" description="post请求上传文件" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>